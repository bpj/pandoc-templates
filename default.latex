\PassOptionsToPackage{unicode=true}{hyperref} % options for packages loaded elsewhere
\PassOptionsToPackage{hyphens}{url}
\PassOptionsToPackage{dvipsnames,svgnames*,x11names*}{xcolor}
%
\documentclass[$if(fontsize)$$fontsize$,$endif$$if(lang)$$babel-lang$,$endif$$if(beamer)$ignorenonframetext,$if(handout)$handout,$endif$$if(aspectratio)$aspectratio=$aspectratio$,$endif$$endif$$for(classoption)$$classoption$$sep$,$endfor$]{$documentclass$}
$if(beamer)$
\setbeamertemplate{caption}[numbered]
\setbeamertemplate{caption label separator}{: }
\setbeamercolor{caption name}{fg=normal text.fg}
\beamertemplatenavigationsymbols$if(navigation)$$navigation$$else$empty$endif$
$endif$
$if(beamerarticle)$
\usepackage{beamerarticle} % needs to be loaded first
$endif$
$for(code-at.latex.header.start)$
$code-at.latex.header.start$
$endfor$
$for(latex-header-top)$
$latex-header-top$
$endfor$
\usepackage{titling}
\usepackage{relsize}
$for(usepackages)$
\usepackage$if(usepackages.options)$[$for(usepackages.options)$$usepackages.options$$sep$,$endfor$]$endif${$if(usepackages.name)$$usepackages.name$$else$$usepackages$$endif$}
$for(usepackages.extra)$
$usepackages.extra$
$endfor$
$endfor$
$if(fontfamily)$
\usepackage[$for(fontfamilyoptions)$$fontfamilyoptions$$sep$,$endfor$]{$fontfamily$}
$else$
\usepackage{lmodern}
$endif$
$if(linestretch)$
\usepackage{setspace}
\setstretch{$linestretch$}
$endif$
\usepackage{amssymb,amsmath}
\usepackage{ifxetex,ifluatex}
\usepackage{fixltx2e} % provides \textsubscript
\ifnum 0\ifxetex 1\fi\ifluatex 1\fi=0 % if pdftex
  \usepackage[$if(fontenc)$$fontenc$$else$T1$endif$]{fontenc}
  \usepackage[utf8]{inputenc}
  \usepackage{textcomp} % provides euro and other symbols
\else % if luatex or xelatex
$if(mathspec)$
  \ifxetex
    \usepackage{mathspec}
  \else
    \usepackage{unicode-math}
  \fi
$else$
  \usepackage{unicode-math}
$endif$
  \defaultfontfeatures{%
     $if(def-feat)$$for(def-feat)$$def-feat$$sep$, $endfor$$else$%
     Renderer=$if(renderer)$$renderer$$else$ICU$endif$,%
	 $if(font-mapping)$Mapping=$mapping$,$endif$%
     Scale=$if(font-scale)$$font-scale$$else$MatchLowercase$endif$,%
     $if(no-ligs)$$else$Ligatures=$if(ligatures)${$for(ligatures)$$ligatures$$sep$, $endfor$}$else$TeX$endif$,$endif$ $endif$}
$for(fontfamilies)$
  \newfontfamily{$fontfamilies.name$}[$fontfamilies.options$]{$fontfamilies.font$}
$endfor$
$for(font-families)$
\newfontfamily{\$if(font-families.font)$$font-families.font$$else$$font-families.id$font$endif$}{$if(font-families.name)$$font-families.name$$else$$font-families.id$$endif$}%
    [$for(font-families.options)$$font-families.options$$sep$,$endfor$]
$if(font-families.id)$
\newcommand{\text$font-families.id$}[1]{\$if(font-families.font)$$font-families.font$$else$$font-families.id$font$endif$ #1}
$endif$
$endfor$
$for(font-faces)$
\newfontface{\$if(font-faces.font)$$font-faces.font$$else$$font-faces.id$font$endif$}{$if(font-faces.name)$$font-faces.name$$else$$font-faces.id$$endif$}%
    [$for(font-faces.options)$$font-faces.options$$sep$,$endfor$]
$if(font-faces.id)$
\newcommand{\text$font-faces.id$}[1]{\$if(font-faces.font)$$font-faces.font$$else$$font-faces.id$font$endif$ #1}
$endif$
$endfor$
$if(mainfont.font)$
\setmainfont{$mainfont.font$}%
    [$for(mainfont.options)$$mainfont.options$$sep$,$endfor$]
$else$
\setmainfont{$if(mainfont)$$mainfont$$else$$if(charis)$Charis SIL$else$FreeSerif$endif$$endif$}%
    [$for(mainfontoptions)$$mainfontoptions$$sep$,$endfor$,$for(main-feat)$$main-feat$$sep$,$endfor$]
$endif$
$if(sansfont.font)$
    \setsansfont{$sansfont.font$}%
    [$for(sansfont.options)$$sansfont.options$$sep$,$endfor$]
$else$
$if(sansfont)$
    \setsansfont{$sansfont$}%
    [$for(sansfontoptions)$$sansfontoptions$$sep$,$endfor$,$for(sans-feat)$$sans-feat$$sep$,$endfor$]
$else$
    \setsansfont{$if(freefont)$FreeSans$else$DejaVu Sans$endif$}%
    [$for(sansfontoptions)$$sansfontoptions$$sep$,$endfor$,$for(sans-feat)$$sans-feat$$sep$,$endfor$]
$endif$
$endif$
$if(monofont.font)$
    \setmonofont{$monofont.font$}%
    [$for(monofont.options)$$monofont.options$$sep$,$endfor$]
$else$
$if(monofont)$
    \setmonofont{$monofont$}%
    [$for(monofontoptions)$$monofontoptions$$sep$,$endfor$,$for(mono-feat)$$mono-feat$$sep$,$endfor$]
$else$
    \setmonofont{$if(lm-mono)$Latin Modern Mono$else$DejaVu Sans Mono$endif$}%
    [Mapping=tex-ansi,$for(monofontoptions)$$monofontoptions$$sep$,$endfor$,$for(mono-feat)$$mono-feat$$sep$,$endfor$]
$endif$
$endif$
$if(mathfont)$
$if(mathspec)$
  \ifxetex
    \setmathfont(Digits,Latin,Greek)[$for(mathfontoptions)$$mathfontoptions$$sep$,$endfor$]{$mathfont$}
  \else
    \setmathfont[$for(mathfontoptions)$$mathfontoptions$$sep$,$endfor$]{$mathfont$}
  \fi
$else$
  \setmathfont[$for(mathfontoptions)$$mathfontoptions$$sep$,$endfor$]{$mathfont$}
$endif$
$endif$
$if(CJKmainfont)$
  \ifxetex
    \usepackage{xeCJK}
    \setCJKmainfont[$for(CJKoptions)$$CJKoptions$$sep$,$endfor$]{$CJKmainfont$}
  \fi
$endif$
$if(luatexjapresetoptions)$
  \ifluatex
    \usepackage[$for(luatexjapresetoptions)$$luatexjapresetoptions$$sep$,$endfor$]{luatexja-preset}
  \fi
$endif$
$if(CJKmainfont)$
  \ifluatex
    \usepackage[$for(luatexjafontspecoptions)$$luatexjafontspecoptions$$sep$,$endfor$]{luatexja-fontspec}
    \setmainjfont[$for(CJKoptions)$$CJKoptions$$sep$,$endfor$]{$CJKmainfont$}
  \fi
$endif$
\newcommand\textusc[1]{{\addfontfeature{Letters=UppercaseSmallCaps}#1}}
\fi
$if(beamer)$
$if(theme)$
\usetheme[$for(themeoptions)$$themeoptions$$sep$,$endfor$]{$theme$}
$endif$
$if(colortheme)$
\usecolortheme{$colortheme$}
$endif$
$if(fonttheme)$
\usefonttheme{$fonttheme$}
$endif$
$if(mainfont)$
\usefonttheme{serif} % use mainfont rather than sansfont for slide text
$endif$
$if(innertheme)$
\useinnertheme{$innertheme$}
$endif$
$if(outertheme)$
\useoutertheme{$outertheme$}
$endif$
$endif$
% use upquote if available, for straight quotes in verbatim environments
\IfFileExists{upquote.sty}{\usepackage{upquote}}{}
% use microtype if available
\IfFileExists{microtype.sty}{%
\usepackage[$for(microtypeoptions)$$microtypeoptions$$sep$,$endfor$]{microtype}
\UseMicrotypeSet[protrusion]{basicmath} % disable protrusion for tt fonts
}{}
$if(indent)$
$else$
\IfFileExists{parskip.sty}{%
\usepackage{parskip}
}{% else
\setlength{\parindent}{0pt}
\setlength{\parskip}{6pt plus 2pt minus 1pt}
}
$endif$
$if(verbatim-in-note)$
\usepackage{fancyvrb}
$endif$
\usepackage[$if(xcolor)$$for(xcolor)$$xcolor$$sep$,$endfor$$endif$]{xcolor}
\usepackage[normalem]{ulem}
\usepackage{hyperref}
\hypersetup{
$if(title-meta)$
            pdftitle={$title-meta$},
$endif$
$if(author-meta)$
            pdfauthor={$author-meta$},
$endif$
$if(keywords)$
            pdfkeywords={$for(keywords)$$keywords$$sep$, $endfor$},
$endif$
$if(bookmarksdepth)$
            bookmarks=true,
            bookmarksdepth={$bookmarksdepth$},
$else$
$if(bookmarks)$
            bookmarks=true,
$endif$
$endif$
$if(nocolorlinks)$
            pdfborder={0 0 0},
$else$
            colorlinks=true,
            linkcolor=$if(linkcolor)$$linkcolor$$else$$if(no-color-links)$Black$else$Maroon$endif$$endif$,
            citecolor=$if(citecolor)$$citecolor$$else$$if(no-color-links)$Black$else$Blue$endif$$endif$,
            urlcolor=$if(urlcolor)$$urlcolor$$else$$if(no-color-links)$Black$else$Blue$endif$$endif$,
            % allbordercolors={0 0 0},
            % pdfborderstyle={/S/U/W 1}
$endif$
            breaklinks=true}
\urlstyle{same}  % don't use monospace font for urls
$if(verbatim-in-note)$
\VerbatimFootnotes % allows verbatim text in footnotes
$endif$
\usepackage{geometry}
$if(a4)$$else$% use PA4 paper size like magazines do  
% to accomodate both North America and the rest of the world
% without scaling!
\geometry{$if(geometry)$$for(geometry)$$geometry$$sep$,$endfor$,$endif$$if(papersize)$$papersize$paper$else$$if(a4)$a4paper$else$papersize={210mm,280mm}$endif$$endif$}
$if(template-comments)$
% BPJ:
% I have defined two variables no-color-links and no-uline-links 
% which control whether links/urls are underlined and/or colored:
% 
%                     colored     underlined
% ------------------- ----------- --------------
%     default         yes         yes
%     no-color-links  no          yes
%     no-uline-links  yes         no
%     both variables  no          no
%
$endif$
$if(no-uline-links)$
$else$
% make hyperlinks (not the PDF objects containing them!) underlined.
% with thanks to Bruno Voisin:
% <http://tug.org/pipermail/macostex-archives/2005-March/014368.html>
% Bruno warns that a change in hyperref may break this hack any day!
% Caveat emptor!
% \usepackage[normalem]{ulem}
\usepackage{url}
\usepackage{ifthen}
\makeatletter
\renewcommand{\url@}[1]{\hyper@linkurl{\uline{\Hurl{#1}}}{#1}}
\renewcommand{\hyper@link@}[4][]
  {\protected@edef\Hy@tempa{#2}%
   \ifthenelse{\equal{\Hy@tempa}{\@empty}}
	 {\hyper@link{#1}{#3}{\uline{#4}}}
	 {\expandafter\hyper@readexternallink#2\\{#1}{#3}{\uline{#4}}}}
\renewcommand{\contentsline}[4]
  {\ifthenelse{\equal{\\#4}{\\}}
	 {\csname l@#1\endcsname{#2}{#3}}
	 {\ifthenelse{\boolean{Hy@linktocpage}}
		{\csname l@#1\endcsname
		   {{#2}}
		   {\hyper@linkstart{link}{#4}{\uline{#3}}\hyper@linkend}}
{\csname l@#1\endcsname
   {\hyper@linkstart{link}{#4}{\uline{#2}}\hyper@linkend}
   {#3}}}}
\makeatother
$endif$
$if(beamer)$
\newif\ifbibliography
$endif$
$if(listings)$
\usepackage{listings}
$endif$
$if(lhs)$
\lstnewenvironment{code}{\lstset{language=Haskell,basicstyle=\small\ttfamily}}{}
$endif$
$if(highlighting-macros)$
$highlighting-macros$
$endif$
$if(tables)$
\usepackage{longtable,booktabs}
$if(beamer)$
\usepackage{caption}
% These lines are needed to make table captions work with longtable:
\makeatletter
\def\fnum@table{\tablename~\thetable}
\makeatother
$else$
% Fix footnotes in tables (requires footnote package)
\IfFileExists{footnote.sty}{\usepackage{footnote}\makesavenoteenv{longtable}}{}
$endif$
$if(endnotes)$
\usepackage{endnotes}
\IfFileExists{hyperendnotes.sty}{\usepackage{hyperendnotes}}{\errmessage{You need to get hyperendnotes.sty from https://git.io/v1d9B}}
\let\footnote=\endnote
\let\footnotemark=\endnotemark
\let\footnotetext=\endnotetext
$if(notesname)$
\renewcommand{\notesname}{$notesname$}
$endif$
$endif$
$if(graphics)$
\usepackage{graphicx,grffile}
\makeatletter
\def\maxwidth{\ifdim\Gin@nat@width>\linewidth\linewidth\else\Gin@nat@width\fi}
\def\maxheight{\ifdim\Gin@nat@height>\textheight\textheight\else\Gin@nat@height\fi}
\makeatother
% Scale images if necessary, so that they will not overflow the page
% margins by default, and it is still possible to overwrite the defaults
% using explicit options in \includegraphics[width, height, ...]{}
\setkeys{Gin}{width=\maxwidth,height=\maxheight,keepaspectratio}
$endif$
$if(beamer)$
% Prevent slide breaks in the middle of a paragraph:
\widowpenalties 1 10000
\raggedbottom
$if(section-titles)$
\AtBeginPart{
  \let\insertpartnumber\relax
  \let\partname\relax
  \frame{\partpage}
}
\AtBeginSection{
  \ifbibliography
  \else
    \let\insertsectionnumber\relax
    \let\sectionname\relax
    \frame{\sectionpage}
  \fi
}
\AtBeginSubsection{
  \let\insertsubsectionnumber\relax
  \let\subsectionname\relax
  \frame{\subsectionpage}
}
$endif$
$endif$
$if(links-as-notes)$
% Make links footnotes instead of hotlinks:
\renewcommand{\href}[2]{#2\footnote{\url{#1}}}
$endif$
$if(baseurl)$
\hyperbaseurl{$baseurl$}
$endif$ 
$if(strikeout)$
% \usepackage[normalem]{ulem}
% BPJ: Real naughty overloading of Pandoc syntax!
$if(sout-sc)$
% Use smallcaps instead of strikeout
\let\sout\textsc
$else$
$if(sout-uline)$
% Use underline instead of strikeout
\let\sout\uline
$else$
$if(sout-uuline)$
% Use double underline instead of strikeout
\let\sout\uuline
$else$
$if(sout-dash)$
% Use dash underline instead of strikeout
\let\sout\dashuline
$endif$
$endif$
% avoid problems with \sout in headers with hyperref:
\pdfstringdefDisableCommands{\renewcommand{\sout}{}}
$endif$
$endif$
$endif$
\setlength{\emergencystretch}{3em}  % prevent overfull lines
\providecommand{\tightlist}{%
  \setlength{\itemsep}{0pt}\setlength{\parskip}{0pt}}
$if(numbersections)$
\setcounter{secnumdepth}{$if(secnumdepth)$$secnumdepth$$else$5$endif$}
$else$
\setcounter{secnumdepth}{0}
$endif$
$if(beamer)$
$else$
$if(subparagraph)$
$else$
$if(pandoc-titlesec-filter-code)$
$else$
% Redefines (sub)paragraphs to behave more like sections
\ifx\paragraph\undefined\else
\let\oldparagraph\paragraph
\renewcommand{\paragraph}[1]{\oldparagraph{#1}\mbox{}}
\fi
\ifx\subparagraph\undefined\else
\let\oldsubparagraph\subparagraph
\renewcommand{\subparagraph}[1]{\oldsubparagraph{#1}\mbox{}}
\fi
$endif$
$endif$
$endif$
$if(pandoc-titlesec-filter-code)$
$pandoc-titlesec-filter-code$
$endif$

% set default figure placement to htbp
\makeatletter
\def\fps@figure{htbp}
\makeatother

$for(header-includes)$
$header-includes$
$endfor$
$if(lang)$
\ifnum 0\ifxetex 1\fi\ifluatex 1\fi=0 % if pdftex
  \usepackage[shorthands=off,$for(babel-otherlangs)$$babel-otherlangs$,$endfor$main=$babel-lang$]{babel}
$if(babel-newcommands)$
  $babel-newcommands$
$endif$
\else
    $for(lang-fonts)$
    \newfontfamily\$lang-fonts.lang$font{$lang-fonts.font$}%
    [$if(lang-fonts.language)$Language=$lang-fonts.language$,$endif$$if(lang-fonts.script)$Script=$lang-fonts.script$,$endif$%
    $if(lang-fonts.options)$$for(lang-fonts.options)$$lang-fonts.options$$sep$,$endfor$$else$Scale=MatchLowercase$endif$]
    $endfor$
  % load polyglossia as late as possible as it *could* call bidi if RTL lang (e.g. Hebrew or Arabic)
  \usepackage{polyglossia}
  \setmainlanguage[$polyglossia-lang.options$]{$polyglossia-lang.name$}
$for(polyglossia-otherlangs)$
  \setotherlanguage[$polyglossia-otherlangs.options$]{$polyglossia-otherlangs.name$}
$endfor$
\fi
$endif$
$if(dir)$
\ifxetex
  % load bidi as late as possible as it modifies e.g. graphicx
  $if(latex-dir-rtl)$
  \usepackage[RTLdocument]{bidi}
  $else$
  \usepackage{bidi}
  $endif$
\fi
\ifnum 0\ifxetex 1\fi\ifluatex 1\fi=0 % if pdftex
  \TeXXeTstate=1
  \newcommand{\RL}[1]{\beginR #1\endR}
  \newcommand{\LR}[1]{\beginL #1\endL}
  \newenvironment{RTL}{\beginR}{\endR}
  \newenvironment{LTR}{\beginL}{\endL}
\fi
$endif$
$if(natbib)$
\usepackage[$natbiboptions$]{natbib}
\bibliographystyle{$if(biblio-style)$$biblio-style$$else$plainnat$endif$}
$endif$
$if(biblatex)$
\usepackage[$if(biblio-style)$style=$biblio-style$,$endif$$for(biblatexoptions)$$biblatexoptions$$sep$,$endfor$]{biblatex}
$for(bibliography)$
\addbibresource{$bibliography$}
$endfor$
$endif$

$if(droptitle)$
\setlength{\droptitle}{$droptitle$}
$endif$

\renewcommand{\maketitlehookb}{%
\begin{center}
$if(subtitle)$%
\par\noindent $subtitle$$if(thanks)$\thanks{$thanks$}$endif$%
$endif$%
$if(version)$%
\par\noindent Version $version$%
$endif$%
$for(internet)$%
\par\noindent $internet$%
$endfor$%
\end{center}
}

\renewcommand{\maketitlehookc}{%
\begin{center}
$if(institute)$%
\par\noindent $institute$%
$endif$%
\end{center}
}


$if(header-include-files.latex.end)$
$for(header-include-files.latex.end)$
\input{$header-include-files.latex.end$}
$endfor$
$else$
$if(header-include-files.latex.start)$
$else$
$for(header-include-files.latex)$
\input{$header-include-files.latex$}
$endfor$
$endif$
$endif$

$for(latex-header-end-files)$
\input{$latex-header-end-files$}

$endfor$
$for(latex-header-end-code)$
$latex-header-end-code$

$endfor$
$for(latex-header)$
$latex-header$

$endfor$


$if(title)$
\title{$title$$if(subtitle)$$else$$if(thanks)$\thanks{$thanks$}$endif$$endif$}
$endif$
$if(author)$
\author{$for(author)$$if(author.name)$$author.name$$if(author.email)$ \\ \textsmaller[2]{$author.email$}$endif$$if(author.institute)$ \\ \textsmaller{$author.institute$}$endif$$else$$author$$endif$$sep$ \\[1em] $endfor$}
$endif$

$if(institute)$
\providecommand{\institute}[1]{}
\institute{$for(institute)$$institute$$sep$ \and $endfor$}
$endif$
$if(date)$
\date{$date$}
$else$
\date{\today}
$endif$

$if(beamer)$
$if(titlegraphic)$
\titlegraphic{\includegraphics{$titlegraphic$}}
$endif$
$if(logo)$
\logo{\includegraphics{$logo$}}
$endif$
$endif$

\begin{document}
$if(title)$
$if(beamer)$
\frame{\titlepage}
$else$
$if(titlepage)$
\begin{titlingpage}
$endif$
\maketitle
$endif$
$endif$
$if(long-abstract)$
\begin{abstract}
$long-abstract$
\end{abstract}
$else$
$if(abstract)$
\begin{abstract}
$abstract$
\end{abstract}
$endif$
$if(titlepage)$
\end{titlingpage}
$endif$
$endif$

$for(include-before)$
$include-before$

$endfor$
$for(latex-body-start-files)$
\input{$latex-body-start-files$}

$endfor$
$for(latex-body-start-code)$
$latex-body-start-code$

$endfor$
$if(toc)$
$if(beamer)$
\begin{frame}
\tableofcontents[hideallsubsections]
\end{frame}
$else$
{
$if(colorlinks)$
\hypersetup{linkcolor=$if(toccolor)$$toccolor$$else$black$endif$}
$endif$
\setcounter{tocdepth}{$toc-depth$}
\tableofcontents
}
$endif$
$endif$
$if(lot)$
\listoftables
$endif$
$if(lof)$
\listoffigures
$endif$
$body$

$if(endnotes)$
\IfFileExists{\jobname.ent}{
\newpage
\begingroup
\parindent 0pt
\parskip 2ex
$if(endnotesize)$
\def\enotesize{$endnotesize$}
$endif$
\theendnotes
\endgroup
}{}
$endif$

$if(natbib)$
$if(bibliography)$
$if(biblio-title)$
$if(book-class)$
\renewcommand\bibname{$biblio-title$}
$else$
\renewcommand\refname{$biblio-title$}
$endif$
$endif$
$if(beamer)$
\begin{frame}[allowframebreaks]{$biblio-title$}
\bibliographytrue
$endif$
\bibliography{$for(bibliography)$$bibliography$$sep$,$endfor$}
$if(beamer)$
\end{frame}
$endif$

$endif$
$endif$
$if(biblatex)$
\printbibliography$if(biblio-title)$[title=$biblio-title$]$endif$

$endif$
$for(include-after)$
$include-after$

$endfor$
$for(latex-body-end-files)$
\input{$latex-body-end-files$}

$endfor$
$for(latex-body-end-code)$
$latex-body-end-code$

$endfor$
\end{document}
